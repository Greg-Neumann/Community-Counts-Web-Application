//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(CommunityCounts.Models.Master.ccMaster),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets4a89309699268c7b74a49ec936752c287d1d751defdc1bf4d35d9fd33942d9b0))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets4a89309699268c7b74a49ec936752c287d1d751defdc1bf4d35d9fd33942d9b0 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "4a89309699268c7b74a49ec936752c287d1d751defdc1bf4d35d9fd33942d9b0"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.C1attendance")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.C1client")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.C1biometrics")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.refdata")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.C1schedules")
            {
                return GetView4();
            }

            if (extentName == "CodeFirstDatabase.C1bookings")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.C1resources")
            {
                return GetView6();
            }

            if (extentName == "CodeFirstDatabase.C1locations")
            {
                return GetView7();
            }

            if (extentName == "CodeFirstDatabase.C1resourcetypes")
            {
                return GetView8();
            }

            if (extentName == "CodeFirstDatabase.C1servicetypes")
            {
                return GetView9();
            }

            if (extentName == "CodeFirstDatabase.C1clientcaseservice")
            {
                return GetView10();
            }

            if (extentName == "CodeFirstDatabase.C1clientcaseheader")
            {
                return GetView11();
            }

            if (extentName == "CodeFirstDatabase.C1clientcasedocs")
            {
                return GetView12();
            }

            if (extentName == "CodeFirstDatabase.C1clientcaseservicedetail")
            {
                return GetView13();
            }

            if (extentName == "CodeFirstDatabase.user")
            {
                return GetView14();
            }

            if (extentName == "CodeFirstDatabase.C1funders")
            {
                return GetView15();
            }

            if (extentName == "CodeFirstDatabase.C1service")
            {
                return GetView16();
            }

            if (extentName == "CodeFirstDatabase.C1journeycat")
            {
                return GetView17();
            }

            if (extentName == "CodeFirstDatabase.C1journeys")
            {
                return GetView18();
            }

            if (extentName == "CodeFirstDatabase.C1surveys")
            {
                return GetView19();
            }

            if (extentName == "CodeFirstDatabase.C1surressca")
            {
                return GetView20();
            }

            if (extentName == "CodeFirstDatabase.C1surrestxt")
            {
                return GetView21();
            }

            if (extentName == "CodeFirstDatabase.C1surveysq")
            {
                return GetView22();
            }

            if (extentName == "CodeFirstDatabase.C1schedulesorig")
            {
                return GetView23();
            }

            if (extentName == "CodeFirstDatabase.regyear")
            {
                return GetView24();
            }

            if (extentName == "CodeFirstDatabase.C1qccom")
            {
                return GetView25();
            }

            if (extentName == "CodeFirstDatabase.C1qccomtype")
            {
                return GetView26();
            }

            if (extentName == "CodeFirstDatabase.C1qcsr")
            {
                return GetView27();
            }

            if (extentName == "CodeFirstDatabase.C1qcsrtype")
            {
                return GetView28();
            }

            if (extentName == "CodeFirstDatabase.refdatatype")
            {
                return GetView29();
            }

            if (extentName == "CodeFirstDatabase.C1clientneedsheader")
            {
                return GetView30();
            }

            if (extentName == "CodeFirstDatabase.C1clientneedsdetail")
            {
                return GetView31();
            }

            if (extentName == "CodeFirstDatabase.C1clientneedscat")
            {
                return GetView32();
            }

            if (extentName == "CodeFirstDatabase.C1clientneedsdocs")
            {
                return GetView33();
            }

            if (extentName == "CodeFirstDatabase.citylist")
            {
                return GetView34();
            }

            if (extentName == "CodeFirstDatabase.customer")
            {
                return GetView35();
            }

            if (extentName == "CodeFirstDatabase.countylist")
            {
                return GetView36();
            }

            if (extentName == "CodeFirstDatabase.postcode")
            {
                return GetView37();
            }

            if (extentName == "CodeFirstDatabase.county")
            {
                return GetView38();
            }

            if (extentName == "CodeFirstDatabase.district")
            {
                return GetView39();
            }

            if (extentName == "CodeFirstDatabase.nhspansha")
            {
                return GetView40();
            }

            if (extentName == "CodeFirstDatabase.nhssha")
            {
                return GetView41();
            }

            if (extentName == "CodeFirstDatabase.ward")
            {
                return GetView42();
            }

            if (extentName == "ccMaster.C1attendance")
            {
                return GetView43();
            }

            if (extentName == "ccMaster.C1client")
            {
                return GetView44();
            }

            if (extentName == "ccMaster.C1biometrics")
            {
                return GetView45();
            }

            if (extentName == "ccMaster.refdatas")
            {
                return GetView46();
            }

            if (extentName == "ccMaster.C1schedules")
            {
                return GetView47();
            }

            if (extentName == "ccMaster.C1bookings")
            {
                return GetView48();
            }

            if (extentName == "ccMaster.C1resources")
            {
                return GetView49();
            }

            if (extentName == "ccMaster.C1locations")
            {
                return GetView50();
            }

            if (extentName == "ccMaster.C1resourcetypes")
            {
                return GetView51();
            }

            if (extentName == "ccMaster.C1servicetypes")
            {
                return GetView52();
            }

            if (extentName == "ccMaster.C1clientcaseservice")
            {
                return GetView53();
            }

            if (extentName == "ccMaster.C1clientcaseheader")
            {
                return GetView54();
            }

            if (extentName == "ccMaster.C1clientcasedocs")
            {
                return GetView55();
            }

            if (extentName == "ccMaster.C1clientcaseservicedetail")
            {
                return GetView56();
            }

            if (extentName == "ccMaster.users")
            {
                return GetView57();
            }

            if (extentName == "ccMaster.C1funders")
            {
                return GetView58();
            }

            if (extentName == "ccMaster.C1service")
            {
                return GetView59();
            }

            if (extentName == "ccMaster.C1journeycat")
            {
                return GetView60();
            }

            if (extentName == "ccMaster.C1journeys")
            {
                return GetView61();
            }

            if (extentName == "ccMaster.C1surveys")
            {
                return GetView62();
            }

            if (extentName == "ccMaster.C1surressca")
            {
                return GetView63();
            }

            if (extentName == "ccMaster.C1surrestxt")
            {
                return GetView64();
            }

            if (extentName == "ccMaster.C1surveysq")
            {
                return GetView65();
            }

            if (extentName == "ccMaster.C1schedulesorig")
            {
                return GetView66();
            }

            if (extentName == "ccMaster.regyears")
            {
                return GetView67();
            }

            if (extentName == "ccMaster.C1qccom")
            {
                return GetView68();
            }

            if (extentName == "ccMaster.C1qccomtype")
            {
                return GetView69();
            }

            if (extentName == "ccMaster.C1qcsr")
            {
                return GetView70();
            }

            if (extentName == "ccMaster.C1qcsrtype")
            {
                return GetView71();
            }

            if (extentName == "ccMaster.refdatatypes")
            {
                return GetView72();
            }

            if (extentName == "ccMaster.C1clientneedsheader")
            {
                return GetView73();
            }

            if (extentName == "ccMaster.C1clientneedsdetail")
            {
                return GetView74();
            }

            if (extentName == "ccMaster.C1clientneedscat")
            {
                return GetView75();
            }

            if (extentName == "ccMaster.C1clientneedsdocs")
            {
                return GetView76();
            }

            if (extentName == "ccMaster.citylists")
            {
                return GetView77();
            }

            if (extentName == "ccMaster.customers")
            {
                return GetView78();
            }

            if (extentName == "ccMaster.countylists")
            {
                return GetView79();
            }

            if (extentName == "ccMaster.postcodes")
            {
                return GetView80();
            }

            if (extentName == "ccMaster.counties")
            {
                return GetView81();
            }

            if (extentName == "ccMaster.districts")
            {
                return GetView82();
            }

            if (extentName == "ccMaster.nhspanshas")
            {
                return GetView83();
            }

            if (extentName == "ccMaster.nhsshas")
            {
                return GetView84();
            }

            if (extentName == "ccMaster.wards")
            {
                return GetView85();
            }

            if (extentName == "CodeFirstDatabase.C1caldat")
            {
                return GetView86();
            }

            if (extentName == "ccMaster.C1caldat")
            {
                return GetView87();
            }

            if (extentName == "CodeFirstDatabase.time")
            {
                return GetView88();
            }

            if (extentName == "ccMaster.times")
            {
                return GetView89();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1attendance.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1attendance
        [CodeFirstDatabaseSchema.C1attendance](T1.C1attendance_idAttendance, T1.C1attendance_idResource, T1.C1attendance_idServiceType, T1.C1attendance_idSchedules, T1.C1attendance_idClient, T1.C1attendance_SessionDate, T1.C1attendance_SessionTime, T1.C1attendance_AttendedCount, T1.C1attendance_AttendedTime, T1.C1attendance_SignInTime, T1.C1attendance_SignOutTime)
    FROM (
        SELECT 
            T.idAttendance AS C1attendance_idAttendance, 
            T.idResource AS C1attendance_idResource, 
            T.idServiceType AS C1attendance_idServiceType, 
            T.idSchedules AS C1attendance_idSchedules, 
            T.idClient AS C1attendance_idClient, 
            T.SessionDate AS C1attendance_SessionDate, 
            T.SessionTime AS C1attendance_SessionTime, 
            T.AttendedCount AS C1attendance_AttendedCount, 
            T.AttendedTime AS C1attendance_AttendedTime, 
            T.SignInTime AS C1attendance_SignInTime, 
            T.SignOutTime AS C1attendance_SignOutTime, 
            True AS _from0
        FROM ccMaster.C1attendance AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1client.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1client
        [CodeFirstDatabaseSchema.C1client](T1.C1client_idClient, T1.C1client_FirstName, T1.C1client_LastName, T1.C1client_idPostcode, T1.C1client_idRegYear, T1.C1client_HouseNumber, T1.C1client_AddressLine1, T1.C1client_AddressLine2, T1.C1client_idCity, T1.C1client_idCounty, T1.C1client_Phone, T1.C1client_Email, T1.C1client_idGender, T1.C1client_idAgeRange, T1.C1client_idEthnicity, T1.[C1client_Ethnicity-Other], T1.C1client_idOccupation, T1.[C1client_Occupation-Other], T1.C1client_idDisability, T1.C1client_idBenefits, T1.C1client_idTravelMethod, T1.C1client_idHearOfServices, T1.C1client_HearOther, T1.C1client_AttainmentTracked, T1.C1client_MemoryStickIssued, T1.C1client_ChangedDateTime, T1.C1client_CreatedDateTime, T1.C1client_ConfirmSigned, T1.C1client_idFirstLanguage, T1.C1client_idHousingStatus, T1.C1client_idTenantStatus, T1.C1client_idCust, T1.C1client_ArmedServCur, T1.C1client_ArmedSerPre, T1.C1client_FirstLanguageOther, T1.C1client_scramble, T1.C1client_idClientPrev)
    FROM (
        SELECT 
            T.idClient AS C1client_idClient, 
            T.FirstName AS C1client_FirstName, 
            T.LastName AS C1client_LastName, 
            T.idPostcode AS C1client_idPostcode, 
            T.idRegYear AS C1client_idRegYear, 
            T.HouseNumber AS C1client_HouseNumber, 
            T.AddressLine1 AS C1client_AddressLine1, 
            T.AddressLine2 AS C1client_AddressLine2, 
            T.idCity AS C1client_idCity, 
            T.idCounty AS C1client_idCounty, 
            T.Phone AS C1client_Phone, 
            T.Email AS C1client_Email, 
            T.idGender AS C1client_idGender, 
            T.idAgeRange AS C1client_idAgeRange, 
            T.idEthnicity AS C1client_idEthnicity, 
            T.Ethnicity_Other AS [C1client_Ethnicity-Other], 
            T.idOccupation AS C1client_idOccupation, 
            T.Occupation_Other AS [C1client_Occupation-Other], 
            T.idDisability AS C1client_idDisability, 
            T.idBenefits AS C1client_idBenefits, 
            T.idTravelMethod AS C1client_idTravelMethod, 
            T.idHearOfServices AS C1client_idHearOfServices, 
            T.HearOther AS C1client_HearOther, 
            T.AttainmentTracked AS C1client_AttainmentTracked, 
            T.MemoryStickIssued AS C1client_MemoryStickIssued, 
            T.ChangedDateTime AS C1client_ChangedDateTime, 
            T.CreatedDateTime AS C1client_CreatedDateTime, 
            T.ConfirmSigned AS C1client_ConfirmSigned, 
            T.idFirstLanguage AS C1client_idFirstLanguage, 
            T.idHousingStatus AS C1client_idHousingStatus, 
            T.idTenantStatus AS C1client_idTenantStatus, 
            T.idCust AS C1client_idCust, 
            T.ArmedServCur AS C1client_ArmedServCur, 
            T.ArmedSerPre AS C1client_ArmedSerPre, 
            T.FirstLanguageOther AS C1client_FirstLanguageOther, 
            T.scramble AS C1client_scramble, 
            T.idClientPrev AS C1client_idClientPrev, 
            True AS _from0
        FROM ccMaster.C1client AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1biometrics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1biometrics
        [CodeFirstDatabaseSchema.C1biometrics](T1.C1biometrics_idBiometrics, T1.C1biometrics_idClient, T1.C1biometrics_MeasureDate, T1.C1biometrics_idBiometricType, T1.C1biometrics_BiometricValue)
    FROM (
        SELECT 
            T.idBiometrics AS C1biometrics_idBiometrics, 
            T.idClient AS C1biometrics_idClient, 
            T.MeasureDate AS C1biometrics_MeasureDate, 
            T.idBiometricType AS C1biometrics_idBiometricType, 
            T.BiometricValue AS C1biometrics_BiometricValue, 
            True AS _from0
        FROM ccMaster.C1biometrics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.refdata.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing refdata
        [CodeFirstDatabaseSchema.refdata](T1.refdata_idRefData, T1.refdata_RefCode, T1.refdata_RefCodeValue, T1.refdata_RefCodeDesc)
    FROM (
        SELECT 
            T.idRefData AS refdata_idRefData, 
            T.RefCode AS refdata_RefCode, 
            T.RefCodeValue AS refdata_RefCodeValue, 
            T.RefCodeDesc AS refdata_RefCodeDesc, 
            True AS _from0
        FROM ccMaster.refdatas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1schedules.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1schedules
        [CodeFirstDatabaseSchema.C1schedules](T1.C1schedules_idSchedules, T1.C1schedules_idRegYear, T1.C1schedules_idResource, T1.C1schedules_idServiceType, T1.C1schedules_StartDate, T1.C1schedules_StartTime, T1.C1schedules_EndDate, T1.C1schedules_EndTime, T1.C1schedules_idScheduleType, T1.C1schedules_Repetition, T1.C1schedules_Notes, T1.C1schedules_UpdatedDateTime, T1.C1schedules_UpdatedUser, T1.C1schedules_CreatedDateTime, T1.C1schedules_CreatedUser, T1.C1schedules_Generated)
    FROM (
        SELECT 
            T.idSchedules AS C1schedules_idSchedules, 
            T.idRegYear AS C1schedules_idRegYear, 
            T.idResource AS C1schedules_idResource, 
            T.idServiceType AS C1schedules_idServiceType, 
            T.StartDate AS C1schedules_StartDate, 
            T.StartTime AS C1schedules_StartTime, 
            T.EndDate AS C1schedules_EndDate, 
            T.EndTime AS C1schedules_EndTime, 
            T.idScheduleType AS C1schedules_idScheduleType, 
            T.Repetition AS C1schedules_Repetition, 
            T.Notes AS C1schedules_Notes, 
            T.UpdatedDateTime AS C1schedules_UpdatedDateTime, 
            T.UpdatedUser AS C1schedules_UpdatedUser, 
            T.CreatedDateTime AS C1schedules_CreatedDateTime, 
            T.CreatedUser AS C1schedules_CreatedUser, 
            T.Generated AS C1schedules_Generated, 
            True AS _from0
        FROM ccMaster.C1schedules AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1bookings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1bookings
        [CodeFirstDatabaseSchema.C1bookings](T1.C1bookings_idBookings, T1.C1bookings_idSchedules, T1.C1bookings_idResource, T1.C1bookings_idServiceType, T1.C1bookings_StartDate, T1.C1bookings_StartTime, T1.C1bookings_EndDate, T1.C1bookings_EndTime, T1.C1bookings_UpdateDateTime)
    FROM (
        SELECT 
            T.idBookings AS C1bookings_idBookings, 
            T.idSchedules AS C1bookings_idSchedules, 
            T.idResource AS C1bookings_idResource, 
            T.idServiceType AS C1bookings_idServiceType, 
            T.StartDate AS C1bookings_StartDate, 
            T.StartTime AS C1bookings_StartTime, 
            T.EndDate AS C1bookings_EndDate, 
            T.EndTime AS C1bookings_EndTime, 
            T.UpdateDateTime AS C1bookings_UpdateDateTime, 
            True AS _from0
        FROM ccMaster.C1bookings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1resources.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1resources
        [CodeFirstDatabaseSchema.C1resources](T1.C1resources_idResource, T1.C1resources_idLocation, T1.C1resources_ResourceName, T1.C1resources_ResourceType)
    FROM (
        SELECT 
            T.idResource AS C1resources_idResource, 
            T.idLocation AS C1resources_idLocation, 
            T.ResourceName AS C1resources_ResourceName, 
            T.ResourceType AS C1resources_ResourceType, 
            True AS _from0
        FROM ccMaster.C1resources AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1locations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1locations
        [CodeFirstDatabaseSchema.C1locations](T1.C1locations_idLocations, T1.C1locations_LocationCode, T1.C1locations_LocationName)
    FROM (
        SELECT 
            T.idLocations AS C1locations_idLocations, 
            T.LocationCode AS C1locations_LocationCode, 
            T.LocationName AS C1locations_LocationName, 
            True AS _from0
        FROM ccMaster.C1locations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1resourcetypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1resourcetypes
        [CodeFirstDatabaseSchema.C1resourcetypes](T1.C1resourcetypes_ResourceType, T1.C1resourcetypes_ResourceTypeDesc)
    FROM (
        SELECT 
            T.ResourceType AS C1resourcetypes_ResourceType, 
            T.ResourceTypeDesc AS C1resourcetypes_ResourceTypeDesc, 
            True AS _from0
        FROM ccMaster.C1resourcetypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1servicetypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1servicetypes
        [CodeFirstDatabaseSchema.C1servicetypes](T1.C1servicetypes_idServiceType, T1.C1servicetypes_ServiceType, T1.C1servicetypes_AttendanceType, T1.C1servicetypes_FunderCode, T1.C1servicetypes_EndedDate)
    FROM (
        SELECT 
            T.idServiceType AS C1servicetypes_idServiceType, 
            T.ServiceType AS C1servicetypes_ServiceType, 
            T.AttendanceType AS C1servicetypes_AttendanceType, 
            T.FunderCode AS C1servicetypes_FunderCode, 
            T.EndedDate AS C1servicetypes_EndedDate, 
            True AS _from0
        FROM ccMaster.C1servicetypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1clientcaseservice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientcaseservice
        [CodeFirstDatabaseSchema.C1clientcaseservice](T1.C1clientcaseservice_idClientCaseDetail, T1.C1clientcaseservice_idClientCaseHeader, T1.C1clientcaseservice_ServiceTypesid, T1.C1clientcaseservice_isCaseWorked)
    FROM (
        SELECT 
            T.idClientCaseDetail AS C1clientcaseservice_idClientCaseDetail, 
            T.idClientCaseHeader AS C1clientcaseservice_idClientCaseHeader, 
            T.ServiceTypesid AS C1clientcaseservice_ServiceTypesid, 
            T.isCaseWorked AS C1clientcaseservice_isCaseWorked, 
            True AS _from0
        FROM ccMaster.C1clientcaseservice AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1clientcaseheader.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientcaseheader
        [CodeFirstDatabaseSchema.C1clientcaseheader](T1.C1clientcaseheader_idClientCaseHeader, T1.C1clientcaseheader_idClient)
    FROM (
        SELECT 
            T.idClientCaseHeader AS C1clientcaseheader_idClientCaseHeader, 
            T.idClient AS C1clientcaseheader_idClient, 
            True AS _from0
        FROM ccMaster.C1clientcaseheader AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1clientcasedocs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientcasedocs
        [CodeFirstDatabaseSchema.C1clientcasedocs](T1.C1clientcasedocs_idClientCaseDocs, T1.C1clientcasedocs_idClientCase, T1.C1clientcasedocs_ClientCaseDocsDate, T1.C1clientcasedocs_ClientCaseDocsPath)
    FROM (
        SELECT 
            T.idClientCaseDocs AS C1clientcasedocs_idClientCaseDocs, 
            T.idClientCase AS C1clientcasedocs_idClientCase, 
            T.ClientCaseDocsDate AS C1clientcasedocs_ClientCaseDocsDate, 
            T.ClientCaseDocsPath AS C1clientcasedocs_ClientCaseDocsPath, 
            True AS _from0
        FROM ccMaster.C1clientcasedocs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1clientcaseservicedetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientcaseservicedetail
        [CodeFirstDatabaseSchema.C1clientcaseservicedetail](T1.C1clientcaseservicedetail_idClientCaseServiceDetail, T1.C1clientcaseservicedetail_idClientCaseDetail, T1.C1clientcaseservicedetail_CaseServiceTime, T1.C1clientcaseservicedetail_CaseServiceDate, T1.C1clientcaseservicedetail_CaseServiceStaffid, T1.C1clientcaseservicedetail_CaseServiceNotes, T1.C1clientcaseservicedetail_CaseServiceEditDate)
    FROM (
        SELECT 
            T.idClientCaseServiceDetail AS C1clientcaseservicedetail_idClientCaseServiceDetail, 
            T.idClientCaseDetail AS C1clientcaseservicedetail_idClientCaseDetail, 
            T.CaseServiceTime AS C1clientcaseservicedetail_CaseServiceTime, 
            T.CaseServiceDate AS C1clientcaseservicedetail_CaseServiceDate, 
            T.CaseServiceStaffid AS C1clientcaseservicedetail_CaseServiceStaffid, 
            T.CaseServiceNotes AS C1clientcaseservicedetail_CaseServiceNotes, 
            T.CaseServiceEditDate AS C1clientcaseservicedetail_CaseServiceEditDate, 
            True AS _from0
        FROM ccMaster.C1clientcaseservicedetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.user.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing user
        [CodeFirstDatabaseSchema.user](T1.user_idUsers, T1.user_Email, T1.user_UserShortName, T1.user_readNews, T1.user_idRegYear)
    FROM (
        SELECT 
            T.idUsers AS user_idUsers, 
            T.Email AS user_Email, 
            T.UserShortName AS user_UserShortName, 
            T.readNews AS user_readNews, 
            T.idRegYear AS user_idRegYear, 
            True AS _from0
        FROM ccMaster.users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1funders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1funders
        [CodeFirstDatabaseSchema.C1funders](T1.C1funders_FunderCode, T1.C1funders_FunderName)
    FROM (
        SELECT 
            T.FunderCode AS C1funders_FunderCode, 
            T.FunderName AS C1funders_FunderName, 
            True AS _from0
        FROM ccMaster.C1funders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1service.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1service
        [CodeFirstDatabaseSchema.C1service](T1.C1service_idService, T1.C1service_idClient, T1.C1service_idServiceType, T1.C1service_CreateDate, T1.C1service_EndedDate, T1.C1service_StartedDate, T1.C1service_JourneyedidCategory, T1.C1service_JourneyedServices)
    FROM (
        SELECT 
            T.idService AS C1service_idService, 
            T.idClient AS C1service_idClient, 
            T.idServiceType AS C1service_idServiceType, 
            T.CreateDate AS C1service_CreateDate, 
            T.EndedDate AS C1service_EndedDate, 
            T.StartedDate AS C1service_StartedDate, 
            T.JourneyedidCategory AS C1service_JourneyedidCategory, 
            T.JourneyedServices AS C1service_JourneyedServices, 
            True AS _from0
        FROM ccMaster.C1service AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1journeycat.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1journeycat
        [CodeFirstDatabaseSchema.C1journeycat](T1.C1journeycat_idJourneyCat, T1.C1journeycat_CatName, T1.C1journeycat_CatDesc)
    FROM (
        SELECT 
            T.idJourneyCat AS C1journeycat_idJourneyCat, 
            T.CatName AS C1journeycat_CatName, 
            T.CatDesc AS C1journeycat_CatDesc, 
            True AS _from0
        FROM ccMaster.C1journeycat AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1journeys.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1journeys
        [CodeFirstDatabaseSchema.C1journeys](T1.C1journeys_idJourneys, T1.C1journeys_OrigidService, T1.C1journeys_JourneyedidService, T1.C1journeys_JourneyDepth)
    FROM (
        SELECT 
            T.idJourneys AS C1journeys_idJourneys, 
            T.OrigidService AS C1journeys_OrigidService, 
            T.JourneyedidService AS C1journeys_JourneyedidService, 
            T.JourneyDepth AS C1journeys_JourneyDepth, 
            True AS _from0
        FROM ccMaster.C1journeys AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1surveys.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1surveys
        [CodeFirstDatabaseSchema.C1surveys](T1.C1surveys_idSurvey, T1.C1surveys_idServiceype, T1.C1surveys_SurveyName, T1.C1surveys_SurveyDesc, T1.C1surveys_forAllClients, T1.C1surveys_numTxtQ, T1.C1surveys_numScaQ, T1.C1surveys_createdUser, T1.C1surveys_updatedUser, T1.C1surveys_createdDateTime, T1.C1surveys_updatedDateTime, T1.C1surveys_active, T1.C1surveys_forAnonymousClients)
    FROM (
        SELECT 
            T.idSurvey AS C1surveys_idSurvey, 
            T.idServiceype AS C1surveys_idServiceype, 
            T.SurveyName AS C1surveys_SurveyName, 
            T.SurveyDesc AS C1surveys_SurveyDesc, 
            T.forAllClients AS C1surveys_forAllClients, 
            T.numTxtQ AS C1surveys_numTxtQ, 
            T.numScaQ AS C1surveys_numScaQ, 
            T.createdUser AS C1surveys_createdUser, 
            T.updatedUser AS C1surveys_updatedUser, 
            T.createdDateTime AS C1surveys_createdDateTime, 
            T.updatedDateTime AS C1surveys_updatedDateTime, 
            T.active AS C1surveys_active, 
            T.forAnonymousClients AS C1surveys_forAnonymousClients, 
            True AS _from0
        FROM ccMaster.C1surveys AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1surressca.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1surressca
        [CodeFirstDatabaseSchema.C1surressca](T1.C1surressca_idSurResSca, T1.C1surressca_idSurvey, T1.C1surressca_idClient, T1.C1surressca_ScaledQ, T1.C1surressca_IDResponse, T1.C1surressca_responseSeqNo)
    FROM (
        SELECT 
            T.idSurResSca AS C1surressca_idSurResSca, 
            T.idSurvey AS C1surressca_idSurvey, 
            T.idClient AS C1surressca_idClient, 
            T.ScaledQ AS C1surressca_ScaledQ, 
            T.IDResponse AS C1surressca_IDResponse, 
            T.responseSeqNo AS C1surressca_responseSeqNo, 
            True AS _from0
        FROM ccMaster.C1surressca AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1surrestxt.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1surrestxt
        [CodeFirstDatabaseSchema.C1surrestxt](T1.C1surrestxt_idSurResTxt, T1.C1surrestxt_idSurvey, T1.C1surrestxt_idClient, T1.C1surrestxt_TextQ, T1.C1surrestxt_Response, T1.C1surrestxt_responseSeqNo)
    FROM (
        SELECT 
            T.idSurResTxt AS C1surrestxt_idSurResTxt, 
            T.idSurvey AS C1surrestxt_idSurvey, 
            T.idClient AS C1surrestxt_idClient, 
            T.TextQ AS C1surrestxt_TextQ, 
            T.Response AS C1surrestxt_Response, 
            T.responseSeqNo AS C1surrestxt_responseSeqNo, 
            True AS _from0
        FROM ccMaster.C1surrestxt AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1surveysq.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1surveysq
        [CodeFirstDatabaseSchema.C1surveysq](T1.C1surveysq_idSurveysQ, T1.C1surveysq_idSurvey, T1.C1surveysq_surveyQSeqNo, T1.C1surveysq_surveyQType, T1.C1surveysq_surveyQText)
    FROM (
        SELECT 
            T.idSurveysQ AS C1surveysq_idSurveysQ, 
            T.idSurvey AS C1surveysq_idSurvey, 
            T.surveyQSeqNo AS C1surveysq_surveyQSeqNo, 
            T.surveyQType AS C1surveysq_surveyQType, 
            T.surveyQText AS C1surveysq_surveyQText, 
            True AS _from0
        FROM ccMaster.C1surveysq AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1schedulesorig.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1schedulesorig
        [CodeFirstDatabaseSchema.C1schedulesorig](T1.C1schedulesorig_idSchedules, T1.C1schedulesorig_idRegYear, T1.C1schedulesorig_idResource, T1.C1schedulesorig_idServiceType, T1.C1schedulesorig_StartDate, T1.C1schedulesorig_StartTime, T1.C1schedulesorig_EndDate, T1.C1schedulesorig_EndTime, T1.C1schedulesorig_idScheduleType, T1.C1schedulesorig_Repetition, T1.C1schedulesorig_Notes, T1.C1schedulesorig_UpdatedDateTime, T1.C1schedulesorig_UpdatedUser, T1.C1schedulesorig_CreatedDateTime, T1.C1schedulesorig_CreatedUser)
    FROM (
        SELECT 
            T.idSchedules AS C1schedulesorig_idSchedules, 
            T.idRegYear AS C1schedulesorig_idRegYear, 
            T.idResource AS C1schedulesorig_idResource, 
            T.idServiceType AS C1schedulesorig_idServiceType, 
            T.StartDate AS C1schedulesorig_StartDate, 
            T.StartTime AS C1schedulesorig_StartTime, 
            T.EndDate AS C1schedulesorig_EndDate, 
            T.EndTime AS C1schedulesorig_EndTime, 
            T.idScheduleType AS C1schedulesorig_idScheduleType, 
            T.Repetition AS C1schedulesorig_Repetition, 
            T.Notes AS C1schedulesorig_Notes, 
            T.UpdatedDateTime AS C1schedulesorig_UpdatedDateTime, 
            T.UpdatedUser AS C1schedulesorig_UpdatedUser, 
            T.CreatedDateTime AS C1schedulesorig_CreatedDateTime, 
            T.CreatedUser AS C1schedulesorig_CreatedUser, 
            True AS _from0
        FROM ccMaster.C1schedulesorig AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.regyear.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing regyear
        [CodeFirstDatabaseSchema.regyear](T1.regyear_idRegYear, T1.regyear_RegYear, T1.regyear_StartDate, T1.regyear_EndDate)
    FROM (
        SELECT 
            T.idRegYear AS regyear_idRegYear, 
            T.RegYear1 AS regyear_RegYear, 
            T.StartDate AS regyear_StartDate, 
            T.EndDate AS regyear_EndDate, 
            True AS _from0
        FROM ccMaster.regyears AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1qccom.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1qccom
        [CodeFirstDatabaseSchema.C1qccom](T1.C1qccom_idQuickContactsComment, T1.C1qccom_Comment, T1.C1qccom_idCategory, T1.C1qccom_CreateDateTime, T1.C1qccom_idRegYear)
    FROM (
        SELECT 
            T.idQuickContactsComment AS C1qccom_idQuickContactsComment, 
            T.Comment AS C1qccom_Comment, 
            T.idCategory AS C1qccom_idCategory, 
            T.CreateDateTime AS C1qccom_CreateDateTime, 
            T.idRegYear AS C1qccom_idRegYear, 
            True AS _from0
        FROM ccMaster.C1qccom AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1qccomtype.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1qccomtype
        [CodeFirstDatabaseSchema.C1qccomtype](T1.C1qccomtype_idQCComType, T1.C1qccomtype_Category)
    FROM (
        SELECT 
            T.idQCComType AS C1qccomtype_idQCComType, 
            T.Category AS C1qccomtype_Category, 
            True AS _from0
        FROM ccMaster.C1qccomtype AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1qcsr.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1qcsr
        [CodeFirstDatabaseSchema.C1qcsr](T1.C1qcsr_idQuickContactsSR, T1.C1qcsr_idCategory, T1.C1qcsr_CreateDateTime, T1.C1qcsr_idRegYear, T1.C1qcsr_comment)
    FROM (
        SELECT 
            T.idQuickContactsSR AS C1qcsr_idQuickContactsSR, 
            T.idCategory AS C1qcsr_idCategory, 
            T.CreateDateTime AS C1qcsr_CreateDateTime, 
            T.idRegYear AS C1qcsr_idRegYear, 
            T.comment AS C1qcsr_comment, 
            True AS _from0
        FROM ccMaster.C1qcsr AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1qcsrtype.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1qcsrtype
        [CodeFirstDatabaseSchema.C1qcsrtype](T1.C1qcsrtype_idQCSRType, T1.C1qcsrtype_QCSRType, T1.C1qcsrtype_Signpost)
    FROM (
        SELECT 
            T.idQCSRType AS C1qcsrtype_idQCSRType, 
            T.QCSRType AS C1qcsrtype_QCSRType, 
            T.Signpost AS C1qcsrtype_Signpost, 
            True AS _from0
        FROM ccMaster.C1qcsrtype AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.refdatatype.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing refdatatype
        [CodeFirstDatabaseSchema.refdatatype](T1.refdatatype_TypeCode, T1.refdatatype_TypeName)
    FROM (
        SELECT 
            T.TypeCode AS refdatatype_TypeCode, 
            T.TypeName AS refdatatype_TypeName, 
            True AS _from0
        FROM ccMaster.refdatatypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1clientneedsheader.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientneedsheader
        [CodeFirstDatabaseSchema.C1clientneedsheader](T1.C1clientneedsheader_idClientNeeds, T1.C1clientneedsheader_idClient, T1.C1clientneedsheader_ClientNeedsDate, T1.C1clientneedsheader_ClientNeedsNotes)
    FROM (
        SELECT 
            T.idClientNeeds AS C1clientneedsheader_idClientNeeds, 
            T.idClient AS C1clientneedsheader_idClient, 
            T.ClientNeedsDate AS C1clientneedsheader_ClientNeedsDate, 
            T.ClientNeedsNotes AS C1clientneedsheader_ClientNeedsNotes, 
            True AS _from0
        FROM ccMaster.C1clientneedsheader AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1clientneedsdetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientneedsdetail
        [CodeFirstDatabaseSchema.C1clientneedsdetail](T1.C1clientneedsdetail_idClientNeedsDetail, T1.C1clientneedsdetail_idClientNeedsCat, T1.C1clientneedsdetail_idClientNeeds, T1.C1clientneedsdetail_hasThisNeed)
    FROM (
        SELECT 
            T.idClientNeedsDetail AS C1clientneedsdetail_idClientNeedsDetail, 
            T.idClientNeedsCat AS C1clientneedsdetail_idClientNeedsCat, 
            T.idClientNeeds AS C1clientneedsdetail_idClientNeeds, 
            T.hasThisNeed AS C1clientneedsdetail_hasThisNeed, 
            True AS _from0
        FROM ccMaster.C1clientneedsdetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1clientneedscat.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientneedscat
        [CodeFirstDatabaseSchema.C1clientneedscat](T1.C1clientneedscat_idNeedsCat, T1.C1clientneedscat_Category)
    FROM (
        SELECT 
            T.idNeedsCat AS C1clientneedscat_idNeedsCat, 
            T.Category AS C1clientneedscat_Category, 
            True AS _from0
        FROM ccMaster.C1clientneedscat AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1clientneedsdocs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientneedsdocs
        [CodeFirstDatabaseSchema.C1clientneedsdocs](T1.C1clientneedsdocs_idClientNeedsDocs, T1.C1clientneedsdocs_idClientNeeds, T1.C1clientneedsdocs_ClientNeedsDocsDate, T1.C1clientneedsdocs_ClientNeedsDocsPath)
    FROM (
        SELECT 
            T.idClientNeedsDocs AS C1clientneedsdocs_idClientNeedsDocs, 
            T.idClientNeeds AS C1clientneedsdocs_idClientNeeds, 
            T.ClientNeedsDocsDate AS C1clientneedsdocs_ClientNeedsDocsDate, 
            T.ClientNeedsDocsPath AS C1clientneedsdocs_ClientNeedsDocsPath, 
            True AS _from0
        FROM ccMaster.C1clientneedsdocs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.citylist.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing citylist
        [CodeFirstDatabaseSchema.citylist](T1.citylist_Cityid, T1.citylist_City)
    FROM (
        SELECT 
            T.Cityid AS citylist_Cityid, 
            T.City AS citylist_City, 
            True AS _from0
        FROM ccMaster.citylists AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.customer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing customer
        [CodeFirstDatabaseSchema.customer](T1.customer_idCust, T1.customer_CustName, T1.customer_CustShortName, T1.customer_StartDate, T1.customer_EndDate, T1.customer_Number, T1.customer_AddressLine1, T1.customer_AddressLine2, T1.customer_idCity, T1.customer_idCounty, T1.customer_idPostCode)
    FROM (
        SELECT 
            T.idCust AS customer_idCust, 
            T.CustName AS customer_CustName, 
            T.CustShortName AS customer_CustShortName, 
            T.StartDate AS customer_StartDate, 
            T.EndDate AS customer_EndDate, 
            T.Number AS customer_Number, 
            T.AddressLine1 AS customer_AddressLine1, 
            T.AddressLine2 AS customer_AddressLine2, 
            T.idCity AS customer_idCity, 
            T.idCounty AS customer_idCounty, 
            T.idPostCode AS customer_idPostCode, 
            True AS _from0
        FROM ccMaster.customers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.countylist.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing countylist
        [CodeFirstDatabaseSchema.countylist](T1.countylist_idCountyList, T1.countylist_County)
    FROM (
        SELECT 
            T.idCountyList AS countylist_idCountyList, 
            T.County AS countylist_County, 
            True AS _from0
        FROM ccMaster.countylists AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.postcode.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing postcode
        [CodeFirstDatabaseSchema.postcode](T1.postcode_idPostCode, T1.postcode_PostCode, T1.postcode_idWardCode, T1.postcode_idDistrictCode, T1.postcode_idCountyCode, T1.postcode_idNHSHACode, T1.postcode_idNHSRegHACode, T1.postcode_idCPDate)
    FROM (
        SELECT 
            T.idPostCode AS postcode_idPostCode, 
            T.PostCode1 AS postcode_PostCode, 
            T.idWardCode AS postcode_idWardCode, 
            T.idDistrictCode AS postcode_idDistrictCode, 
            T.idCountyCode AS postcode_idCountyCode, 
            T.idNHSHACode AS postcode_idNHSHACode, 
            T.idNHSRegHACode AS postcode_idNHSRegHACode, 
            T.idCPDate AS postcode_idCPDate, 
            True AS _from0
        FROM ccMaster.postcodes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.county.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing county
        [CodeFirstDatabaseSchema.county](T1.county_idCountyListCode, T1.county_CountyCode, T1.county_CountyName, T1.county_idCPDate)
    FROM (
        SELECT 
            T.idCountyListCode AS county_idCountyListCode, 
            T.CountyCode AS county_CountyCode, 
            T.CountyName AS county_CountyName, 
            T.idCPDate AS county_idCPDate, 
            True AS _from0
        FROM ccMaster.counties AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.district.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing district
        [CodeFirstDatabaseSchema.district](T1.district_idDistrictCode, T1.district_DistrictCode, T1.district_Description, T1.district_idCPDate)
    FROM (
        SELECT 
            T.idDistrictCode AS district_idDistrictCode, 
            T.DistrictCode AS district_DistrictCode, 
            T.Description AS district_Description, 
            T.idCPDate AS district_idCPDate, 
            True AS _from0
        FROM ccMaster.districts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.nhspansha.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView40()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing nhspansha
        [CodeFirstDatabaseSchema.nhspansha](T1.nhspansha_idNHSPanSHACode, T1.nhspansha_NHSPanSHACode, T1.nhspansha_NHSPanSHAName, T1.nhspansha_idCPDate)
    FROM (
        SELECT 
            T.idNHSPanSHACode AS nhspansha_idNHSPanSHACode, 
            T.NHSPanSHACode AS nhspansha_NHSPanSHACode, 
            T.NHSPanSHAName AS nhspansha_NHSPanSHAName, 
            T.idCPDate AS nhspansha_idCPDate, 
            True AS _from0
        FROM ccMaster.nhspanshas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.nhssha.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView41()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing nhssha
        [CodeFirstDatabaseSchema.nhssha](T1.nhssha_idNHSSHACode, T1.nhssha_NHSSHACode, T1.nhssha_NHSSHAName, T1.nhssha_idCPDate)
    FROM (
        SELECT 
            T.idNHSSHACode AS nhssha_idNHSSHACode, 
            T.NHSSHACode AS nhssha_NHSSHACode, 
            T.NHSSHAName AS nhssha_NHSSHAName, 
            T.idCPDate AS nhssha_idCPDate, 
            True AS _from0
        FROM ccMaster.nhsshas AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ward.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView42()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ward
        [CodeFirstDatabaseSchema.ward](T1.ward_idWardCode, T1.ward_WardCode, T1.ward_Description, T1.ward_idCPDate)
    FROM (
        SELECT 
            T.idWardCode AS ward_idWardCode, 
            T.WardCode AS ward_WardCode, 
            T.Description AS ward_Description, 
            T.idCPDate AS ward_idCPDate, 
            True AS _from0
        FROM ccMaster.wards AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1attendance.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView43()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1attendance
        [CommunityCounts.Models.Master.C1attendance](T1.C1attendance_idAttendance, T1.C1attendance_idResource, T1.C1attendance_idServiceType, T1.C1attendance_idSchedules, T1.C1attendance_idClient, T1.C1attendance_SessionDate, T1.C1attendance_SessionTime, T1.C1attendance_AttendedCount, T1.C1attendance_AttendedTime, T1.C1attendance_SignInTime, T1.C1attendance_SignOutTime)
    FROM (
        SELECT 
            T.idAttendance AS C1attendance_idAttendance, 
            T.idResource AS C1attendance_idResource, 
            T.idServiceType AS C1attendance_idServiceType, 
            T.idSchedules AS C1attendance_idSchedules, 
            T.idClient AS C1attendance_idClient, 
            T.SessionDate AS C1attendance_SessionDate, 
            T.SessionTime AS C1attendance_SessionTime, 
            T.AttendedCount AS C1attendance_AttendedCount, 
            T.AttendedTime AS C1attendance_AttendedTime, 
            T.SignInTime AS C1attendance_SignInTime, 
            T.SignOutTime AS C1attendance_SignOutTime, 
            True AS _from0
        FROM CodeFirstDatabase.C1attendance AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1client.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView44()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1client
        [CommunityCounts.Models.Master.C1client](T1.C1client_idClient, T1.C1client_FirstName, T1.C1client_LastName, T1.C1client_idPostcode, T1.C1client_idRegYear, T1.C1client_HouseNumber, T1.C1client_AddressLine1, T1.C1client_AddressLine2, T1.C1client_idCity, T1.C1client_idCounty, T1.C1client_Phone, T1.C1client_Email, T1.C1client_idGender, T1.C1client_idAgeRange, T1.C1client_idEthnicity, T1.[C1client.Ethnicity_Other], T1.C1client_idOccupation, T1.[C1client.Occupation_Other], T1.C1client_idDisability, T1.C1client_idBenefits, T1.C1client_idTravelMethod, T1.C1client_idHearOfServices, T1.C1client_HearOther, T1.C1client_AttainmentTracked, T1.C1client_MemoryStickIssued, T1.C1client_ChangedDateTime, T1.C1client_CreatedDateTime, T1.C1client_ConfirmSigned, T1.C1client_idFirstLanguage, T1.C1client_idHousingStatus, T1.C1client_idTenantStatus, T1.C1client_idCust, T1.C1client_ArmedServCur, T1.C1client_ArmedSerPre, T1.C1client_FirstLanguageOther, T1.C1client_scramble, T1.C1client_idClientPrev)
    FROM (
        SELECT 
            T.idClient AS C1client_idClient, 
            T.FirstName AS C1client_FirstName, 
            T.LastName AS C1client_LastName, 
            T.idPostcode AS C1client_idPostcode, 
            T.idRegYear AS C1client_idRegYear, 
            T.HouseNumber AS C1client_HouseNumber, 
            T.AddressLine1 AS C1client_AddressLine1, 
            T.AddressLine2 AS C1client_AddressLine2, 
            T.idCity AS C1client_idCity, 
            T.idCounty AS C1client_idCounty, 
            T.Phone AS C1client_Phone, 
            T.Email AS C1client_Email, 
            T.idGender AS C1client_idGender, 
            T.idAgeRange AS C1client_idAgeRange, 
            T.idEthnicity AS C1client_idEthnicity, 
            T.[Ethnicity-Other] AS [C1client.Ethnicity_Other], 
            T.idOccupation AS C1client_idOccupation, 
            T.[Occupation-Other] AS [C1client.Occupation_Other], 
            T.idDisability AS C1client_idDisability, 
            T.idBenefits AS C1client_idBenefits, 
            T.idTravelMethod AS C1client_idTravelMethod, 
            T.idHearOfServices AS C1client_idHearOfServices, 
            T.HearOther AS C1client_HearOther, 
            T.AttainmentTracked AS C1client_AttainmentTracked, 
            T.MemoryStickIssued AS C1client_MemoryStickIssued, 
            T.ChangedDateTime AS C1client_ChangedDateTime, 
            T.CreatedDateTime AS C1client_CreatedDateTime, 
            T.ConfirmSigned AS C1client_ConfirmSigned, 
            T.idFirstLanguage AS C1client_idFirstLanguage, 
            T.idHousingStatus AS C1client_idHousingStatus, 
            T.idTenantStatus AS C1client_idTenantStatus, 
            T.idCust AS C1client_idCust, 
            T.ArmedServCur AS C1client_ArmedServCur, 
            T.ArmedSerPre AS C1client_ArmedSerPre, 
            T.FirstLanguageOther AS C1client_FirstLanguageOther, 
            T.scramble AS C1client_scramble, 
            T.idClientPrev AS C1client_idClientPrev, 
            True AS _from0
        FROM CodeFirstDatabase.C1client AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1biometrics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView45()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1biometrics
        [CommunityCounts.Models.Master.C1biometrics](T1.C1biometrics_idBiometrics, T1.C1biometrics_idClient, T1.C1biometrics_MeasureDate, T1.C1biometrics_idBiometricType, T1.C1biometrics_BiometricValue)
    FROM (
        SELECT 
            T.idBiometrics AS C1biometrics_idBiometrics, 
            T.idClient AS C1biometrics_idClient, 
            T.MeasureDate AS C1biometrics_MeasureDate, 
            T.idBiometricType AS C1biometrics_idBiometricType, 
            T.BiometricValue AS C1biometrics_BiometricValue, 
            True AS _from0
        FROM CodeFirstDatabase.C1biometrics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.refdatas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView46()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing refdatas
        [CommunityCounts.Models.Master.refdata](T1.refdata_idRefData, T1.refdata_RefCode, T1.refdata_RefCodeValue, T1.refdata_RefCodeDesc)
    FROM (
        SELECT 
            T.idRefData AS refdata_idRefData, 
            T.RefCode AS refdata_RefCode, 
            T.RefCodeValue AS refdata_RefCodeValue, 
            T.RefCodeDesc AS refdata_RefCodeDesc, 
            True AS _from0
        FROM CodeFirstDatabase.refdata AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1schedules.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView47()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1schedules
        [CommunityCounts.Models.Master.C1schedules](T1.C1schedules_idSchedules, T1.C1schedules_idRegYear, T1.C1schedules_idResource, T1.C1schedules_idServiceType, T1.C1schedules_StartDate, T1.C1schedules_StartTime, T1.C1schedules_EndDate, T1.C1schedules_EndTime, T1.C1schedules_idScheduleType, T1.C1schedules_Repetition, T1.C1schedules_Notes, T1.C1schedules_UpdatedDateTime, T1.C1schedules_UpdatedUser, T1.C1schedules_CreatedDateTime, T1.C1schedules_CreatedUser, T1.C1schedules_Generated)
    FROM (
        SELECT 
            T.idSchedules AS C1schedules_idSchedules, 
            T.idRegYear AS C1schedules_idRegYear, 
            T.idResource AS C1schedules_idResource, 
            T.idServiceType AS C1schedules_idServiceType, 
            T.StartDate AS C1schedules_StartDate, 
            T.StartTime AS C1schedules_StartTime, 
            T.EndDate AS C1schedules_EndDate, 
            T.EndTime AS C1schedules_EndTime, 
            T.idScheduleType AS C1schedules_idScheduleType, 
            T.Repetition AS C1schedules_Repetition, 
            T.Notes AS C1schedules_Notes, 
            T.UpdatedDateTime AS C1schedules_UpdatedDateTime, 
            T.UpdatedUser AS C1schedules_UpdatedUser, 
            T.CreatedDateTime AS C1schedules_CreatedDateTime, 
            T.CreatedUser AS C1schedules_CreatedUser, 
            T.Generated AS C1schedules_Generated, 
            True AS _from0
        FROM CodeFirstDatabase.C1schedules AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1bookings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView48()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1bookings
        [CommunityCounts.Models.Master.C1bookings](T1.C1bookings_idBookings, T1.C1bookings_idSchedules, T1.C1bookings_idResource, T1.C1bookings_idServiceType, T1.C1bookings_StartDate, T1.C1bookings_StartTime, T1.C1bookings_EndDate, T1.C1bookings_EndTime, T1.C1bookings_UpdateDateTime)
    FROM (
        SELECT 
            T.idBookings AS C1bookings_idBookings, 
            T.idSchedules AS C1bookings_idSchedules, 
            T.idResource AS C1bookings_idResource, 
            T.idServiceType AS C1bookings_idServiceType, 
            T.StartDate AS C1bookings_StartDate, 
            T.StartTime AS C1bookings_StartTime, 
            T.EndDate AS C1bookings_EndDate, 
            T.EndTime AS C1bookings_EndTime, 
            T.UpdateDateTime AS C1bookings_UpdateDateTime, 
            True AS _from0
        FROM CodeFirstDatabase.C1bookings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1resources.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView49()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1resources
        [CommunityCounts.Models.Master.C1resources](T1.C1resources_idResource, T1.C1resources_idLocation, T1.C1resources_ResourceName, T1.C1resources_ResourceType)
    FROM (
        SELECT 
            T.idResource AS C1resources_idResource, 
            T.idLocation AS C1resources_idLocation, 
            T.ResourceName AS C1resources_ResourceName, 
            T.ResourceType AS C1resources_ResourceType, 
            True AS _from0
        FROM CodeFirstDatabase.C1resources AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1locations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView50()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1locations
        [CommunityCounts.Models.Master.C1locations](T1.C1locations_idLocations, T1.C1locations_LocationCode, T1.C1locations_LocationName)
    FROM (
        SELECT 
            T.idLocations AS C1locations_idLocations, 
            T.LocationCode AS C1locations_LocationCode, 
            T.LocationName AS C1locations_LocationName, 
            True AS _from0
        FROM CodeFirstDatabase.C1locations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1resourcetypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView51()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1resourcetypes
        [CommunityCounts.Models.Master.C1resourcetypes](T1.C1resourcetypes_ResourceType, T1.C1resourcetypes_ResourceTypeDesc)
    FROM (
        SELECT 
            T.ResourceType AS C1resourcetypes_ResourceType, 
            T.ResourceTypeDesc AS C1resourcetypes_ResourceTypeDesc, 
            True AS _from0
        FROM CodeFirstDatabase.C1resourcetypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1servicetypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView52()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1servicetypes
        [CommunityCounts.Models.Master.C1servicetypes](T1.C1servicetypes_idServiceType, T1.C1servicetypes_ServiceType, T1.C1servicetypes_AttendanceType, T1.C1servicetypes_FunderCode, T1.C1servicetypes_EndedDate)
    FROM (
        SELECT 
            T.idServiceType AS C1servicetypes_idServiceType, 
            T.ServiceType AS C1servicetypes_ServiceType, 
            T.AttendanceType AS C1servicetypes_AttendanceType, 
            T.FunderCode AS C1servicetypes_FunderCode, 
            T.EndedDate AS C1servicetypes_EndedDate, 
            True AS _from0
        FROM CodeFirstDatabase.C1servicetypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1clientcaseservice.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView53()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientcaseservice
        [CommunityCounts.Models.Master.C1clientcaseservice](T1.C1clientcaseservice_idClientCaseDetail, T1.C1clientcaseservice_idClientCaseHeader, T1.C1clientcaseservice_ServiceTypesid, T1.C1clientcaseservice_isCaseWorked)
    FROM (
        SELECT 
            T.idClientCaseDetail AS C1clientcaseservice_idClientCaseDetail, 
            T.idClientCaseHeader AS C1clientcaseservice_idClientCaseHeader, 
            T.ServiceTypesid AS C1clientcaseservice_ServiceTypesid, 
            T.isCaseWorked AS C1clientcaseservice_isCaseWorked, 
            True AS _from0
        FROM CodeFirstDatabase.C1clientcaseservice AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1clientcaseheader.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView54()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientcaseheader
        [CommunityCounts.Models.Master.C1clientcaseheader](T1.C1clientcaseheader_idClientCaseHeader, T1.C1clientcaseheader_idClient)
    FROM (
        SELECT 
            T.idClientCaseHeader AS C1clientcaseheader_idClientCaseHeader, 
            T.idClient AS C1clientcaseheader_idClient, 
            True AS _from0
        FROM CodeFirstDatabase.C1clientcaseheader AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1clientcasedocs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView55()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientcasedocs
        [CommunityCounts.Models.Master.C1clientcasedocs](T1.C1clientcasedocs_idClientCaseDocs, T1.C1clientcasedocs_idClientCase, T1.C1clientcasedocs_ClientCaseDocsDate, T1.C1clientcasedocs_ClientCaseDocsPath)
    FROM (
        SELECT 
            T.idClientCaseDocs AS C1clientcasedocs_idClientCaseDocs, 
            T.idClientCase AS C1clientcasedocs_idClientCase, 
            T.ClientCaseDocsDate AS C1clientcasedocs_ClientCaseDocsDate, 
            T.ClientCaseDocsPath AS C1clientcasedocs_ClientCaseDocsPath, 
            True AS _from0
        FROM CodeFirstDatabase.C1clientcasedocs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1clientcaseservicedetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView56()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientcaseservicedetail
        [CommunityCounts.Models.Master.C1clientcaseservicedetail](T1.C1clientcaseservicedetail_idClientCaseServiceDetail, T1.C1clientcaseservicedetail_idClientCaseDetail, T1.C1clientcaseservicedetail_CaseServiceTime, T1.C1clientcaseservicedetail_CaseServiceDate, T1.C1clientcaseservicedetail_CaseServiceStaffid, T1.C1clientcaseservicedetail_CaseServiceNotes, T1.C1clientcaseservicedetail_CaseServiceEditDate)
    FROM (
        SELECT 
            T.idClientCaseServiceDetail AS C1clientcaseservicedetail_idClientCaseServiceDetail, 
            T.idClientCaseDetail AS C1clientcaseservicedetail_idClientCaseDetail, 
            T.CaseServiceTime AS C1clientcaseservicedetail_CaseServiceTime, 
            T.CaseServiceDate AS C1clientcaseservicedetail_CaseServiceDate, 
            T.CaseServiceStaffid AS C1clientcaseservicedetail_CaseServiceStaffid, 
            T.CaseServiceNotes AS C1clientcaseservicedetail_CaseServiceNotes, 
            T.CaseServiceEditDate AS C1clientcaseservicedetail_CaseServiceEditDate, 
            True AS _from0
        FROM CodeFirstDatabase.C1clientcaseservicedetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView57()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing users
        [CommunityCounts.Models.Master.user](T1.user_idUsers, T1.user_Email, T1.user_UserShortName, T1.user_readNews, T1.user_idRegYear)
    FROM (
        SELECT 
            T.idUsers AS user_idUsers, 
            T.Email AS user_Email, 
            T.UserShortName AS user_UserShortName, 
            T.readNews AS user_readNews, 
            T.idRegYear AS user_idRegYear, 
            True AS _from0
        FROM CodeFirstDatabase.user AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1funders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView58()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1funders
        [CommunityCounts.Models.Master.C1funders](T1.C1funders_FunderCode, T1.C1funders_FunderName)
    FROM (
        SELECT 
            T.FunderCode AS C1funders_FunderCode, 
            T.FunderName AS C1funders_FunderName, 
            True AS _from0
        FROM CodeFirstDatabase.C1funders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1service.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView59()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1service
        [CommunityCounts.Models.Master.C1service](T1.C1service_idService, T1.C1service_idClient, T1.C1service_idServiceType, T1.C1service_CreateDate, T1.C1service_EndedDate, T1.C1service_StartedDate, T1.C1service_JourneyedidCategory, T1.C1service_JourneyedServices)
    FROM (
        SELECT 
            T.idService AS C1service_idService, 
            T.idClient AS C1service_idClient, 
            T.idServiceType AS C1service_idServiceType, 
            T.CreateDate AS C1service_CreateDate, 
            T.EndedDate AS C1service_EndedDate, 
            T.StartedDate AS C1service_StartedDate, 
            T.JourneyedidCategory AS C1service_JourneyedidCategory, 
            T.JourneyedServices AS C1service_JourneyedServices, 
            True AS _from0
        FROM CodeFirstDatabase.C1service AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1journeycat.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView60()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1journeycat
        [CommunityCounts.Models.Master.C1journeycat](T1.C1journeycat_idJourneyCat, T1.C1journeycat_CatName, T1.C1journeycat_CatDesc)
    FROM (
        SELECT 
            T.idJourneyCat AS C1journeycat_idJourneyCat, 
            T.CatName AS C1journeycat_CatName, 
            T.CatDesc AS C1journeycat_CatDesc, 
            True AS _from0
        FROM CodeFirstDatabase.C1journeycat AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1journeys.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView61()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1journeys
        [CommunityCounts.Models.Master.C1journeys](T1.C1journeys_idJourneys, T1.C1journeys_OrigidService, T1.C1journeys_JourneyedidService, T1.C1journeys_JourneyDepth)
    FROM (
        SELECT 
            T.idJourneys AS C1journeys_idJourneys, 
            T.OrigidService AS C1journeys_OrigidService, 
            T.JourneyedidService AS C1journeys_JourneyedidService, 
            T.JourneyDepth AS C1journeys_JourneyDepth, 
            True AS _from0
        FROM CodeFirstDatabase.C1journeys AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1surveys.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView62()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1surveys
        [CommunityCounts.Models.Master.C1surveys](T1.C1surveys_idSurvey, T1.C1surveys_idServiceype, T1.C1surveys_SurveyName, T1.C1surveys_SurveyDesc, T1.C1surveys_forAllClients, T1.C1surveys_numTxtQ, T1.C1surveys_numScaQ, T1.C1surveys_createdUser, T1.C1surveys_updatedUser, T1.C1surveys_createdDateTime, T1.C1surveys_updatedDateTime, T1.C1surveys_active, T1.C1surveys_forAnonymousClients)
    FROM (
        SELECT 
            T.idSurvey AS C1surveys_idSurvey, 
            T.idServiceype AS C1surveys_idServiceype, 
            T.SurveyName AS C1surveys_SurveyName, 
            T.SurveyDesc AS C1surveys_SurveyDesc, 
            T.forAllClients AS C1surveys_forAllClients, 
            T.numTxtQ AS C1surveys_numTxtQ, 
            T.numScaQ AS C1surveys_numScaQ, 
            T.createdUser AS C1surveys_createdUser, 
            T.updatedUser AS C1surveys_updatedUser, 
            T.createdDateTime AS C1surveys_createdDateTime, 
            T.updatedDateTime AS C1surveys_updatedDateTime, 
            T.active AS C1surveys_active, 
            T.forAnonymousClients AS C1surveys_forAnonymousClients, 
            True AS _from0
        FROM CodeFirstDatabase.C1surveys AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1surressca.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView63()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1surressca
        [CommunityCounts.Models.Master.C1surressca](T1.C1surressca_idSurResSca, T1.C1surressca_idSurvey, T1.C1surressca_idClient, T1.C1surressca_ScaledQ, T1.C1surressca_IDResponse, T1.C1surressca_responseSeqNo)
    FROM (
        SELECT 
            T.idSurResSca AS C1surressca_idSurResSca, 
            T.idSurvey AS C1surressca_idSurvey, 
            T.idClient AS C1surressca_idClient, 
            T.ScaledQ AS C1surressca_ScaledQ, 
            T.IDResponse AS C1surressca_IDResponse, 
            T.responseSeqNo AS C1surressca_responseSeqNo, 
            True AS _from0
        FROM CodeFirstDatabase.C1surressca AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1surrestxt.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView64()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1surrestxt
        [CommunityCounts.Models.Master.C1surrestxt](T1.C1surrestxt_idSurResTxt, T1.C1surrestxt_idSurvey, T1.C1surrestxt_idClient, T1.C1surrestxt_TextQ, T1.C1surrestxt_Response, T1.C1surrestxt_responseSeqNo)
    FROM (
        SELECT 
            T.idSurResTxt AS C1surrestxt_idSurResTxt, 
            T.idSurvey AS C1surrestxt_idSurvey, 
            T.idClient AS C1surrestxt_idClient, 
            T.TextQ AS C1surrestxt_TextQ, 
            T.Response AS C1surrestxt_Response, 
            T.responseSeqNo AS C1surrestxt_responseSeqNo, 
            True AS _from0
        FROM CodeFirstDatabase.C1surrestxt AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1surveysq.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView65()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1surveysq
        [CommunityCounts.Models.Master.C1surveysq](T1.C1surveysq_idSurveysQ, T1.C1surveysq_idSurvey, T1.C1surveysq_surveyQSeqNo, T1.C1surveysq_surveyQType, T1.C1surveysq_surveyQText)
    FROM (
        SELECT 
            T.idSurveysQ AS C1surveysq_idSurveysQ, 
            T.idSurvey AS C1surveysq_idSurvey, 
            T.surveyQSeqNo AS C1surveysq_surveyQSeqNo, 
            T.surveyQType AS C1surveysq_surveyQType, 
            T.surveyQText AS C1surveysq_surveyQText, 
            True AS _from0
        FROM CodeFirstDatabase.C1surveysq AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1schedulesorig.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView66()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1schedulesorig
        [CommunityCounts.Models.Master.C1schedulesorig](T1.C1schedulesorig_idSchedules, T1.C1schedulesorig_idRegYear, T1.C1schedulesorig_idResource, T1.C1schedulesorig_idServiceType, T1.C1schedulesorig_StartDate, T1.C1schedulesorig_StartTime, T1.C1schedulesorig_EndDate, T1.C1schedulesorig_EndTime, T1.C1schedulesorig_idScheduleType, T1.C1schedulesorig_Repetition, T1.C1schedulesorig_Notes, T1.C1schedulesorig_UpdatedDateTime, T1.C1schedulesorig_UpdatedUser, T1.C1schedulesorig_CreatedDateTime, T1.C1schedulesorig_CreatedUser)
    FROM (
        SELECT 
            T.idSchedules AS C1schedulesorig_idSchedules, 
            T.idRegYear AS C1schedulesorig_idRegYear, 
            T.idResource AS C1schedulesorig_idResource, 
            T.idServiceType AS C1schedulesorig_idServiceType, 
            T.StartDate AS C1schedulesorig_StartDate, 
            T.StartTime AS C1schedulesorig_StartTime, 
            T.EndDate AS C1schedulesorig_EndDate, 
            T.EndTime AS C1schedulesorig_EndTime, 
            T.idScheduleType AS C1schedulesorig_idScheduleType, 
            T.Repetition AS C1schedulesorig_Repetition, 
            T.Notes AS C1schedulesorig_Notes, 
            T.UpdatedDateTime AS C1schedulesorig_UpdatedDateTime, 
            T.UpdatedUser AS C1schedulesorig_UpdatedUser, 
            T.CreatedDateTime AS C1schedulesorig_CreatedDateTime, 
            T.CreatedUser AS C1schedulesorig_CreatedUser, 
            True AS _from0
        FROM CodeFirstDatabase.C1schedulesorig AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.regyears.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView67()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing regyears
        [CommunityCounts.Models.Master.regyear](T1.regyear_idRegYear, T1.regyear_RegYear1, T1.regyear_StartDate, T1.regyear_EndDate)
    FROM (
        SELECT 
            T.idRegYear AS regyear_idRegYear, 
            T.RegYear AS regyear_RegYear1, 
            T.StartDate AS regyear_StartDate, 
            T.EndDate AS regyear_EndDate, 
            True AS _from0
        FROM CodeFirstDatabase.regyear AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1qccom.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView68()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1qccom
        [CommunityCounts.Models.Master.C1qccom](T1.C1qccom_idQuickContactsComment, T1.C1qccom_Comment, T1.C1qccom_idCategory, T1.C1qccom_CreateDateTime, T1.C1qccom_idRegYear)
    FROM (
        SELECT 
            T.idQuickContactsComment AS C1qccom_idQuickContactsComment, 
            T.Comment AS C1qccom_Comment, 
            T.idCategory AS C1qccom_idCategory, 
            T.CreateDateTime AS C1qccom_CreateDateTime, 
            T.idRegYear AS C1qccom_idRegYear, 
            True AS _from0
        FROM CodeFirstDatabase.C1qccom AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1qccomtype.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView69()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1qccomtype
        [CommunityCounts.Models.Master.C1qccomtype](T1.C1qccomtype_idQCComType, T1.C1qccomtype_Category)
    FROM (
        SELECT 
            T.idQCComType AS C1qccomtype_idQCComType, 
            T.Category AS C1qccomtype_Category, 
            True AS _from0
        FROM CodeFirstDatabase.C1qccomtype AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1qcsr.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView70()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1qcsr
        [CommunityCounts.Models.Master.C1qcsr](T1.C1qcsr_idQuickContactsSR, T1.C1qcsr_idCategory, T1.C1qcsr_CreateDateTime, T1.C1qcsr_idRegYear, T1.C1qcsr_comment)
    FROM (
        SELECT 
            T.idQuickContactsSR AS C1qcsr_idQuickContactsSR, 
            T.idCategory AS C1qcsr_idCategory, 
            T.CreateDateTime AS C1qcsr_CreateDateTime, 
            T.idRegYear AS C1qcsr_idRegYear, 
            T.comment AS C1qcsr_comment, 
            True AS _from0
        FROM CodeFirstDatabase.C1qcsr AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1qcsrtype.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView71()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1qcsrtype
        [CommunityCounts.Models.Master.C1qcsrtype](T1.C1qcsrtype_idQCSRType, T1.C1qcsrtype_QCSRType, T1.C1qcsrtype_Signpost)
    FROM (
        SELECT 
            T.idQCSRType AS C1qcsrtype_idQCSRType, 
            T.QCSRType AS C1qcsrtype_QCSRType, 
            T.Signpost AS C1qcsrtype_Signpost, 
            True AS _from0
        FROM CodeFirstDatabase.C1qcsrtype AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.refdatatypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView72()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing refdatatypes
        [CommunityCounts.Models.Master.refdatatype](T1.refdatatype_TypeCode, T1.refdatatype_TypeName)
    FROM (
        SELECT 
            T.TypeCode AS refdatatype_TypeCode, 
            T.TypeName AS refdatatype_TypeName, 
            True AS _from0
        FROM CodeFirstDatabase.refdatatype AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1clientneedsheader.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView73()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientneedsheader
        [CommunityCounts.Models.Master.C1clientneedsheader](T1.C1clientneedsheader_idClientNeeds, T1.C1clientneedsheader_idClient, T1.C1clientneedsheader_ClientNeedsDate, T1.C1clientneedsheader_ClientNeedsNotes)
    FROM (
        SELECT 
            T.idClientNeeds AS C1clientneedsheader_idClientNeeds, 
            T.idClient AS C1clientneedsheader_idClient, 
            T.ClientNeedsDate AS C1clientneedsheader_ClientNeedsDate, 
            T.ClientNeedsNotes AS C1clientneedsheader_ClientNeedsNotes, 
            True AS _from0
        FROM CodeFirstDatabase.C1clientneedsheader AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1clientneedsdetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView74()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientneedsdetail
        [CommunityCounts.Models.Master.C1clientneedsdetail](T1.C1clientneedsdetail_idClientNeedsDetail, T1.C1clientneedsdetail_idClientNeedsCat, T1.C1clientneedsdetail_idClientNeeds, T1.C1clientneedsdetail_hasThisNeed)
    FROM (
        SELECT 
            T.idClientNeedsDetail AS C1clientneedsdetail_idClientNeedsDetail, 
            T.idClientNeedsCat AS C1clientneedsdetail_idClientNeedsCat, 
            T.idClientNeeds AS C1clientneedsdetail_idClientNeeds, 
            T.hasThisNeed AS C1clientneedsdetail_hasThisNeed, 
            True AS _from0
        FROM CodeFirstDatabase.C1clientneedsdetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1clientneedscat.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView75()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientneedscat
        [CommunityCounts.Models.Master.C1clientneedscat](T1.C1clientneedscat_idNeedsCat, T1.C1clientneedscat_Category)
    FROM (
        SELECT 
            T.idNeedsCat AS C1clientneedscat_idNeedsCat, 
            T.Category AS C1clientneedscat_Category, 
            True AS _from0
        FROM CodeFirstDatabase.C1clientneedscat AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1clientneedsdocs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView76()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1clientneedsdocs
        [CommunityCounts.Models.Master.C1clientneedsdocs](T1.C1clientneedsdocs_idClientNeedsDocs, T1.C1clientneedsdocs_idClientNeeds, T1.C1clientneedsdocs_ClientNeedsDocsDate, T1.C1clientneedsdocs_ClientNeedsDocsPath)
    FROM (
        SELECT 
            T.idClientNeedsDocs AS C1clientneedsdocs_idClientNeedsDocs, 
            T.idClientNeeds AS C1clientneedsdocs_idClientNeeds, 
            T.ClientNeedsDocsDate AS C1clientneedsdocs_ClientNeedsDocsDate, 
            T.ClientNeedsDocsPath AS C1clientneedsdocs_ClientNeedsDocsPath, 
            True AS _from0
        FROM CodeFirstDatabase.C1clientneedsdocs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.citylists.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView77()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing citylists
        [CommunityCounts.Models.Master.citylist](T1.citylist_Cityid, T1.citylist_City)
    FROM (
        SELECT 
            T.Cityid AS citylist_Cityid, 
            T.City AS citylist_City, 
            True AS _from0
        FROM CodeFirstDatabase.citylist AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.customers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView78()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing customers
        [CommunityCounts.Models.Master.customer](T1.customer_idCust, T1.customer_CustName, T1.customer_CustShortName, T1.customer_StartDate, T1.customer_EndDate, T1.customer_Number, T1.customer_AddressLine1, T1.customer_AddressLine2, T1.customer_idCity, T1.customer_idCounty, T1.customer_idPostCode)
    FROM (
        SELECT 
            T.idCust AS customer_idCust, 
            T.CustName AS customer_CustName, 
            T.CustShortName AS customer_CustShortName, 
            T.StartDate AS customer_StartDate, 
            T.EndDate AS customer_EndDate, 
            T.Number AS customer_Number, 
            T.AddressLine1 AS customer_AddressLine1, 
            T.AddressLine2 AS customer_AddressLine2, 
            T.idCity AS customer_idCity, 
            T.idCounty AS customer_idCounty, 
            T.idPostCode AS customer_idPostCode, 
            True AS _from0
        FROM CodeFirstDatabase.customer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.countylists.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView79()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing countylists
        [CommunityCounts.Models.Master.countylist](T1.countylist_idCountyList, T1.countylist_County)
    FROM (
        SELECT 
            T.idCountyList AS countylist_idCountyList, 
            T.County AS countylist_County, 
            True AS _from0
        FROM CodeFirstDatabase.countylist AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.postcodes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView80()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing postcodes
        [CommunityCounts.Models.Master.postcode](T1.postcode_idPostCode, T1.postcode_PostCode1, T1.postcode_idWardCode, T1.postcode_idDistrictCode, T1.postcode_idCountyCode, T1.postcode_idNHSHACode, T1.postcode_idNHSRegHACode, T1.postcode_idCPDate)
    FROM (
        SELECT 
            T.idPostCode AS postcode_idPostCode, 
            T.PostCode AS postcode_PostCode1, 
            T.idWardCode AS postcode_idWardCode, 
            T.idDistrictCode AS postcode_idDistrictCode, 
            T.idCountyCode AS postcode_idCountyCode, 
            T.idNHSHACode AS postcode_idNHSHACode, 
            T.idNHSRegHACode AS postcode_idNHSRegHACode, 
            T.idCPDate AS postcode_idCPDate, 
            True AS _from0
        FROM CodeFirstDatabase.postcode AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.counties.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView81()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing counties
        [CommunityCounts.Models.Master.county](T1.county_idCountyListCode, T1.county_CountyCode, T1.county_CountyName, T1.county_idCPDate)
    FROM (
        SELECT 
            T.idCountyListCode AS county_idCountyListCode, 
            T.CountyCode AS county_CountyCode, 
            T.CountyName AS county_CountyName, 
            T.idCPDate AS county_idCPDate, 
            True AS _from0
        FROM CodeFirstDatabase.county AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.districts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView82()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing districts
        [CommunityCounts.Models.Master.district](T1.district_idDistrictCode, T1.district_DistrictCode, T1.district_Description, T1.district_idCPDate)
    FROM (
        SELECT 
            T.idDistrictCode AS district_idDistrictCode, 
            T.DistrictCode AS district_DistrictCode, 
            T.Description AS district_Description, 
            T.idCPDate AS district_idCPDate, 
            True AS _from0
        FROM CodeFirstDatabase.district AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.nhspanshas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView83()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing nhspanshas
        [CommunityCounts.Models.Master.nhspansha](T1.nhspansha_idNHSPanSHACode, T1.nhspansha_NHSPanSHACode, T1.nhspansha_NHSPanSHAName, T1.nhspansha_idCPDate)
    FROM (
        SELECT 
            T.idNHSPanSHACode AS nhspansha_idNHSPanSHACode, 
            T.NHSPanSHACode AS nhspansha_NHSPanSHACode, 
            T.NHSPanSHAName AS nhspansha_NHSPanSHAName, 
            T.idCPDate AS nhspansha_idCPDate, 
            True AS _from0
        FROM CodeFirstDatabase.nhspansha AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.nhsshas.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView84()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing nhsshas
        [CommunityCounts.Models.Master.nhssha](T1.nhssha_idNHSSHACode, T1.nhssha_NHSSHACode, T1.nhssha_NHSSHAName, T1.nhssha_idCPDate)
    FROM (
        SELECT 
            T.idNHSSHACode AS nhssha_idNHSSHACode, 
            T.NHSSHACode AS nhssha_NHSSHACode, 
            T.NHSSHAName AS nhssha_NHSSHAName, 
            T.idCPDate AS nhssha_idCPDate, 
            True AS _from0
        FROM CodeFirstDatabase.nhssha AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.wards.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView85()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing wards
        [CommunityCounts.Models.Master.ward](T1.ward_idWardCode, T1.ward_WardCode, T1.ward_Description, T1.ward_idCPDate)
    FROM (
        SELECT 
            T.idWardCode AS ward_idWardCode, 
            T.WardCode AS ward_WardCode, 
            T.Description AS ward_Description, 
            T.idCPDate AS ward_idCPDate, 
            True AS _from0
        FROM CodeFirstDatabase.ward AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.C1caldat.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView86()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1caldat
        [CodeFirstDatabaseSchema.C1caldat](T1.C1caldat_ccCalDate, T1.C1caldat_ccCalQtr, T1.C1caldat_ccCalHalf, T1.C1caldat_ccCalYear, T1.C1caldat_ccCalYearMonth)
    FROM (
        SELECT 
            T.ccCalDate AS C1caldat_ccCalDate, 
            T.ccCalQtr AS C1caldat_ccCalQtr, 
            T.ccCalHalf AS C1caldat_ccCalHalf, 
            T.ccCalYear AS C1caldat_ccCalYear, 
            T.ccCalYearMonth AS C1caldat_ccCalYearMonth, 
            True AS _from0
        FROM ccMaster.C1caldat AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.C1caldat.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView87()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C1caldat
        [CommunityCounts.Models.Master.C1caldat](T1.C1caldat_ccCalDate, T1.C1caldat_ccCalQtr, T1.C1caldat_ccCalHalf, T1.C1caldat_ccCalYear, T1.C1caldat_ccCalYearMonth)
    FROM (
        SELECT 
            T.ccCalDate AS C1caldat_ccCalDate, 
            T.ccCalQtr AS C1caldat_ccCalQtr, 
            T.ccCalHalf AS C1caldat_ccCalHalf, 
            T.ccCalYear AS C1caldat_ccCalYear, 
            T.ccCalYearMonth AS C1caldat_ccCalYearMonth, 
            True AS _from0
        FROM CodeFirstDatabase.C1caldat AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.time.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView88()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing time
        [CodeFirstDatabaseSchema.time](T1.time_Times)
    FROM (
        SELECT 
            T.Times AS time_Times, 
            True AS _from0
        FROM ccMaster.times AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for ccMaster.times.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView89()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing times
        [CommunityCounts.Models.Master.time](T1.time_Times)
    FROM (
        SELECT 
            T.Times AS time_Times, 
            True AS _from0
        FROM CodeFirstDatabase.time AS T
    ) AS T1");
        }
    }
}
